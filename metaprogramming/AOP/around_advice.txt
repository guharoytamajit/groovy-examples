class Person{
def sleep(){ "sleeping..."}
}
Person.metaClass.invokeMethod = { String name, args ->
System.out.println("Call to $name intercepted on $delegate... ")
def validMethod = Person.metaClass.getMetaMethod(name, args)
if (validMethod == null) {
Person.metaClass.invokeMissingMethod(delegate, name, args)
} else {
System.out.println("running pre-filter... ")
result = validMethod.invoke(delegate, args) // Remove this for around-advice
System.out.println("running post-filter... ")
result
}
}
print new Person().sleep()